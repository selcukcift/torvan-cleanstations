"use client"

import { format } from "date-fns"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"

interface PrintableProductionReportProps {
  reportData: any
}

// Status display names
const statusDisplayNames: Record<string, string> = {
  ORDER_CREATED: "Order Created",
  SINK_BODY_EXTERNAL_PRODUCTION: "Sink Body in External Production",
  READY_FOR_PRE_QC: "Ready for Pre-QC",
  READY_FOR_PRODUCTION: "Ready for Production",
  TESTING_COMPLETE: "Testing Complete",
  PACKAGING_COMPLETE: "Packaging Complete",
  READY_FOR_FINAL_QC: "Ready for Final QC",
  READY_FOR_SHIP: "Ready for Ship",
  SHIPPED: "Shipped"
}

export function PrintableProductionReport({ reportData }: PrintableProductionReportProps) {
  if (!reportData) return null

  return (
    <div className="print-container space-y-6 p-8 bg-white">
      {/* Print-specific styles */}
      <style jsx>{`
        @media print {
          .print-container {
            margin: 0;
            padding: 0;
            background: white !important;
            color: black !important;
            font-size: 11px;
            line-height: 1.4;
          }
          
          .print-page-break {
            page-break-before: always;
          }
          
          .print-hide {
            display: none !important;
          }
          
          .print-table {
            border-collapse: collapse;
            width: 100%;
          }
          
          .print-table th,
          .print-table td {
            border: 1px solid #ddd;
            padding: 4px 8px;
            text-align: left;
          }
          
          .print-table th {
            background-color: #f5f5f5;
            font-weight: bold;
          }
          
          .print-header {
            border-bottom: 2px solid #000;
            margin-bottom: 20px;
            padding-bottom: 15px;
          }
        }
      `}</style>

      {/* Header with Company Info */}
      <div className="print-header flex justify-between items-start border-b-2 border-gray-900 pb-4 mb-6">
        <div>
          <h1 className="text-2xl font-bold text-gray-900">Torvan Medical CleanStation</h1>
          <p className="text-lg font-medium text-gray-700">{reportData.title}</p>
          <p className="text-xs text-gray-500">Generated on {format(new Date(reportData.generatedAt), "MMMM dd, yyyy 'at' HH:mm")}</p>
        </div>
        <div className="text-right">
          <div className="text-sm font-medium">Report Period</div>
          <div className="text-sm text-gray-600">{reportData.dateRange.fromFormatted}</div>
          <div className="text-sm text-gray-600">to {reportData.dateRange.toFormatted}</div>
          <div className="text-xs text-gray-500 mt-2">Generated by: {reportData.generatedBy.name}</div>
        </div>
      </div>

      {/* Summary Report */}
      {reportData.summary && (
        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="text-lg">Production Summary</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              {/* Key Metrics */}
              <div className="space-y-4">
                <h4 className="font-semibold text-base border-b pb-1">Key Metrics</h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-slate-600">Total Orders:</span>
                    <span className="font-medium">{reportData.summary.totalOrders}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-slate-600">Average/Day:</span>
                    <span className="font-medium">{reportData.summary.averageOrdersPerDay}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-slate-600">Assigned:</span>
                    <span className="font-medium">{reportData.summary.assignmentDistribution.assigned}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-slate-600">Unassigned:</span>
                    <span className="font-medium">{reportData.summary.assignmentDistribution.unassigned}</span>
                  </div>
                </div>
              </div>

              {/* Status Distribution */}
              <div className="space-y-4">
                <h4 className="font-semibold text-base border-b pb-1">Status Distribution</h4>
                <div className="space-y-1">
                  {Object.entries(reportData.summary.statusDistribution || {}).map(([status, count]) => (
                    <div key={status} className="flex justify-between text-sm">
                      <span className="text-slate-600">{statusDisplayNames[status] || status}:</span>
                      <span className="font-medium">{count as number}</span>
                    </div>
                  ))}
                </div>
              </div>

              {/* Top Customers */}
              <div className="space-y-4">
                <h4 className="font-semibold text-base border-b pb-1">Top Customers</h4>
                <div className="space-y-1">
                  {reportData.summary.topCustomers?.slice(0, 5).map((item: any, idx: number) => (
                    <div key={idx} className="flex justify-between text-sm">
                      <span className="text-slate-600 truncate">{item.customer}:</span>
                      <span className="font-medium">{item.count}</span>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      )}

      {/* Completion Report */}
      {reportData.completion && (
        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="text-lg">Completion Analysis</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-4">
                <h4 className="font-semibold text-base border-b pb-1">Completion Metrics</h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-slate-600">Total Orders:</span>
                    <span className="font-medium">{reportData.completion.totalOrders}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-slate-600">Completed:</span>
                    <span className="font-medium">{reportData.completion.totalCompleted}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-slate-600">Completion Rate:</span>
                    <span className="font-medium">{reportData.completion.completionRate}%</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-slate-600">Avg Completions/Day:</span>
                    <span className="font-medium">{reportData.completion.averageCompletionsPerPeriod}</span>
                  </div>
                </div>
              </div>
              <div className="space-y-4">
                <h4 className="font-semibold text-base border-b pb-1">Status Breakdown</h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-slate-600">Shipped:</span>
                    <span className="font-medium text-green-600">{reportData.completion.totalCompleted}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-slate-600">In Progress:</span>
                    <span className="font-medium text-orange-600">{reportData.completion.pendingOrders}</span>
                  </div>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      )}

      {/* Cycle Times Report */}
      {reportData.cycleTimes && (
        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="text-lg">Cycle Time Analysis</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="space-y-4">
                <h4 className="font-semibold text-base border-b pb-1">Average Times</h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-slate-600">Avg Cycle Time:</span>
                    <span className="font-medium">{reportData.cycleTimes.averageTotalCycleTime}h</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-slate-600">Orders Analyzed:</span>
                    <span className="font-medium">{reportData.cycleTimes.totalOrdersAnalyzed}</span>
                  </div>
                </div>
              </div>
              
              {reportData.cycleTimes.fastestOrder && (
                <div className="space-y-4">
                  <h4 className="font-semibold text-base border-b pb-1">Fastest Order</h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-slate-600">PO Number:</span>
                      <span className="font-medium">{reportData.cycleTimes.fastestOrder.poNumber}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-600">Customer:</span>
                      <span className="font-medium truncate">{reportData.cycleTimes.fastestOrder.customerName}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-600">Cycle Time:</span>
                      <span className="font-medium text-green-600">{reportData.cycleTimes.fastestOrder.totalCycleTimeHours?.toFixed(1)}h</span>
                    </div>
                  </div>
                </div>
              )}
              
              {reportData.cycleTimes.slowestOrder && (
                <div className="space-y-4">
                  <h4 className="font-semibold text-base border-b pb-1">Slowest Order</h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-slate-600">PO Number:</span>
                      <span className="font-medium">{reportData.cycleTimes.slowestOrder.poNumber}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-600">Customer:</span>
                      <span className="font-medium truncate">{reportData.cycleTimes.slowestOrder.customerName}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-slate-600">Cycle Time:</span>
                      <span className="font-medium text-red-600">{reportData.cycleTimes.slowestOrder.totalCycleTimeHours?.toFixed(1)}h</span>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </CardContent>
        </Card>
      )}

      {/* Orders List */}
      {reportData.orders && reportData.orders.length > 0 && (
        <div className="print-page-break">
          <Card className="mb-6">
            <CardHeader>
              <CardTitle className="text-lg">Orders in Period</CardTitle>
            </CardHeader>
            <CardContent>
              <Table className="print-table">
                <TableHeader>
                  <TableRow>
                    <TableHead>PO Number</TableHead>
                    <TableHead>Customer</TableHead>
                    <TableHead>Order Date</TableHead>
                    <TableHead>Want Date</TableHead>
                    <TableHead>Status</TableHead>
                    <TableHead>Build Count</TableHead>
                    <TableHead>Created By</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {reportData.orders.slice(0, 50).map((order: any) => (
                    <TableRow key={order.id}>
                      <TableCell className="font-medium">{order.poNumber}</TableCell>
                      <TableCell>{order.customerName}</TableCell>
                      <TableCell>{format(new Date(order.createdAt), "MMM dd, yyyy")}</TableCell>
                      <TableCell>{format(new Date(order.wantDate), "MMM dd, yyyy")}</TableCell>
                      <TableCell>
                        <Badge variant="outline" className="text-xs">
                          {statusDisplayNames[order.orderStatus] || order.orderStatus}
                        </Badge>
                      </TableCell>
                      <TableCell>{order.buildNumbers?.length || 0}</TableCell>
                      <TableCell>{order.createdBy?.fullName || 'Unknown'}</TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
              {reportData.orders.length > 50 && (
                <div className="mt-4 text-sm text-gray-600 text-center">
                  Showing first 50 of {reportData.orders.length} orders
                </div>
              )}
            </CardContent>
          </Card>
        </div>
      )}

      {/* Footer */}
      <div className="mt-8 pt-4 border-t border-gray-300 text-xs text-gray-500 text-center">
        <p>This report was generated by the Torvan Medical CleanStation Production System</p>
        <p>For questions or concerns, please contact your Production Coordinator</p>
        <p className="mt-2">Report ID: RPT-{format(new Date(reportData.generatedAt), "yyyyMMdd-HHmmss")}</p>
      </div>
    </div>
  )
}